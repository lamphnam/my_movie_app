// src/components/Header.tsx

'use client'

import type React from 'react'
import { useState } from 'react'
import { Link } from 'react-router-dom'
import { filterData } from '../data/filters'
import SearchForm from './SearchForm'

const Header: React.FC = () => {
  // State cho menu hamburger (n·∫øu b·∫°n mu·ªën d√πng l·∫°i)
  // State ƒë·ªÉ qu·∫£n l√Ω dropdown n√†o ƒëang m·ªü ('genres', 'countries', 'years', ho·∫∑c null)
  const [openDropdown, setOpenDropdown] = useState<string | null>(null)

  // H√†m ƒë·ªÉ b·∫≠t/t·∫Øt dropdown khi click v√†o n√∫t
  const handleDropdownToggle = (dropdownName: string) => {
    // N·∫øu dropdown ƒëang click ƒë√£ m·ªü th√¨ ƒë√≥ng l·∫°i, ng∆∞·ª£c l·∫°i th√¨ m·ªü n√≥ ra
    if (openDropdown === dropdownName) {
      setOpenDropdown(null)
    } else {
      setOpenDropdown(dropdownName)
    }
  }

  // H√†m ƒë·ªÉ ƒë√≥ng t·∫•t c·∫£ dropdown khi click v√†o m·ªôt link b√™n trong
  const handleLinkClick = () => {
    setOpenDropdown(null)
  }

  return (
    <header className="app-header">
      <div className="container">
        {/* Main Header - ƒê√£ t·ªëi ∆∞u cho responsive */}
        <div className="header-content">
          {/* Logo */}
          <Link to="/" className="logo">
            <span>üé¨</span> HNAM Phim
          </Link>

          {/* Navigation (cho c·∫£ mobile v√† desktop) */}
          <nav className="desktop-nav">
            {/* Dropdown Th·ªÉ lo·∫°i */}
            <div className={`nav-dropdown ${openDropdown === 'genres' ? 'is-open' : ''}`}>
              <button className="nav-link" onClick={() => handleDropdownToggle('genres')}>
                Th·ªÉ lo·∫°i
                <svg
                  className="dropdown-arrow"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    strokeLinecap="round"
                    strokeLinejoin="round"
                    strokeWidth={2}
                    d="M19 9l-7 7-7-7"
                  />
                </svg>
              </button>
              <div className="nav-dropdown-content">
                <div className="nav-dropdown-grid">
                  {filterData.genres.map((genre) => (
                    <Link
                      key={genre.id}
                      to={`/genre/${genre.slug}`}
                      className="nav-dropdown-item"
                      onClick={handleLinkClick}
                    >
                      {genre.name}
                    </Link>
                  ))}
                </div>
              </div>
            </div>

            {/* Dropdown Qu·ªëc gia */}
            <div className={`nav-dropdown ${openDropdown === 'countries' ? 'is-open' : ''}`}>
              <button className="nav-link" onClick={() => handleDropdownToggle('countries')}>
                Qu·ªëc gia
                <svg
                  className="dropdown-arrow"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    strokeLinecap="round"
                    strokeLinejoin="round"
                    strokeWidth={2}
                    d="M19 9l-7 7-7-7"
                  />
                </svg>
              </button>
              <div className="nav-dropdown-content">
                <div className="nav-dropdown-grid">
                  {filterData.countries.map((country) => (
                    <Link
                      key={country.id}
                      to={`/country/${country.slug}`}
                      className="nav-dropdown-item"
                      onClick={handleLinkClick}
                    >
                      {country.name}
                    </Link>
                  ))}
                </div>
              </div>
            </div>

            {/* Dropdown NƒÉm S·∫£n Xu·∫•t */}
            <div className={`nav-dropdown ${openDropdown === 'years' ? 'is-open' : ''}`}>
              <button className="nav-link" onClick={() => handleDropdownToggle('years')}>
                NƒÉm
                <svg
                  className="dropdown-arrow"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    strokeLinecap="round"
                    strokeLinejoin="round"
                    strokeWidth={2}
                    d="M19 9l-7 7-7-7"
                  />
                </svg>
              </button>
              <div className="nav-dropdown-content">
                <div className="nav-dropdown-grid">
                  {filterData.years.map((year) => (
                    <Link
                      key={year.id}
                      to={`/year/${year.slug}`}
                      className="nav-dropdown-item"
                      onClick={handleLinkClick}
                    >
                      {year.name}
                    </Link>
                  ))}
                </div>
              </div>
            </div>
          </nav>

          {/* SearchForm ƒë∆∞·ª£c ƒë·∫∑t ri√™ng ƒë·ªÉ d·ªÖ d√†ng responsive */}
          <SearchForm />

          {/* N√∫t Hamburger (t·∫°m ·∫©n ƒëi v√¨ nav ƒë√£ hi·ªÉn th·ªã) */}
          {/* <button onClick={() => setIsMenuOpen(!isMenuOpen)} className="mobile-menu-button">
            <svg className="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M4 6h16M4 12h16M4 18h16" />
            </svg>
          </button> */}
        </div>

        {/* Category Pills (gi·ªØ nguy√™n) */}
        <div className="category-pills">
          {filterData.categories.slice(0, 7).map((category) => (
            <Link key={category.id} to={`/category/${category.slug}`} className="category-pill">
              {category.name}
            </Link>
          ))}
        </div>
      </div>
    </header>
  )
}

export default Header
