'use client'

// src/pages/SearchPage.tsx
import { useState, useEffect } from 'react'
import { useSearchParams } from 'react-router-dom'
import type { MovieListItem, MovieListApiResponse } from '../type'
import MovieCard from '../components/MovieCard'
import Loader from '../components/Loader'
import CategoryHeader from '../components/CategoryHeader'

const SearchPage = () => {
  // useSearchParams ƒë·ªÉ l·∫•y query param t·ª´ URL, v√≠ d·ª•: /search?q=keyword
  const [searchParams] = useSearchParams()
  const keyword = searchParams.get('q') // L·∫•y gi√° tr·ªã c·ªßa 'q'

  const [movies, setMovies] = useState<MovieListItem[]>([])
  const [loading, setLoading] = useState<boolean>(true)
  const [error, setError] = useState<string | null>(null)

  useEffect(() => {
    if (!keyword) {
      setMovies([])
      setLoading(false)
      return
    }

    const fetchSearchResults = async () => {
      setLoading(true)
      setError(null)
      try {
        const response = await fetch(`https://phim.nguonc.com/api/films/search?keyword=${keyword}`)
        if (!response.ok) throw new Error('L·ªói khi t√¨m ki·∫øm phim')
        // API search kh√¥ng c√≥ ph√¢n trang, n√™n response kh√°c m·ªôt ch√∫t
        const data: Omit<MovieListApiResponse, 'paginate'> = await response.json()

        if (data.status === 'success') {
          setMovies(data.items)
        } else {
          setMovies([])
        }
      } catch (err: any) {
        setError(err.message)
      } finally {
        setLoading(false)
      }
    }

    fetchSearchResults()
  }, [keyword]) // Ch·∫°y l·∫°i m·ªói khi t·ª´ kh√≥a `keyword` thay ƒë·ªïi

  if (loading) return <Loader />
  if (error) return <div className="error-message">L·ªói: {error}</div>

  return (
    <div className="search-page-container">
      <CategoryHeader type="search" searchKeyword={keyword || ''} />

      {movies.length > 0 ? (
        <div className="movie-grid">
          {movies.map((movie) => (
            <MovieCard key={movie.slug} movie={movie} />
          ))}
        </div>
      ) : (
        <div className="no-results">
          <div className="no-results-icon">üîç</div>
          <h3>Kh√¥ng t√¨m th·∫•y k·∫øt qu·∫£</h3>
          <p>
            Kh√¥ng c√≥ phim n√†o ph√π h·ª£p v·ªõi t·ª´ kh√≥a "{keyword}". H√£y th·ª≠ t√¨m ki·∫øm v·ªõi t·ª´ kh√≥a kh√°c.
          </p>
        </div>
      )}
    </div>
  )
}

export default SearchPage
